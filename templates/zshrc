platform='unknown'
unamestr=`uname`
if [[ "$unamestr" == 'Linux' ]]; then
   platform='linux'
   export PROMPT='%~ %# '
elif [[ "$unamestr" == 'Darwin' ]]; then
   platform='osx'
fi

if [ -d $HOME/.oh-my-zsh ]; then
  ZSH=$HOME/.oh-my-zsh
  ZSH_THEME="robbyrussell"
  # todo: switch to pythonic stack
  plugins=(bundler rake cp gem git vi-mode sudo ruby brew z)
  source $ZSH/oh-my-zsh.sh
fi

export PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/git/bin:$PATH

[ "$(arch)" = "arm64" ] && [ -f "/opt/homebrew/bin/brew" ] && eval $(/opt/homebrew/bin/brew shellenv)
[ "$(arch)" = "i386" ] && [ -f "/usr/local/bin/brew" ] && eval $(/usr/local/bin/brew shellenv)

[ -d "$HOME/.local/bin" ] && export PATH="$PATH:$HOME/.local/bin"

export EDITOR='vim'
export GNUTERM='X11'


bindkey -v # VIM binding for zsh

# Convinience tools
alias -g be='bundle exec'

# git clone https://github.com/rbenv/rbenv.git ~/.rbenv
# restart shell and then:
# git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build

[ -d "$HOME/.rbenv" ] && export PATH="$HOME/.rbenv/bin:$PATH"

[ -d "$HOME/.rbenv" ] &&  eval "$(rbenv init -)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

[ -f ~/.secret.sh ] && source ~/.secret.sh

[ -f $HOME/.oh-my-zsh/plugins/z/z.sh ] && . $HOME/.oh-my-zsh/plugins/z/z.sh

# https://github.com/SidOfc/dotfiles/blob/d07fa3862ed065c2a5a7f1160ae98416bfe2e1ee/zsh/kp
kp(){
  local pid=$(ps -ef | sed 1d | eval "fzf ${FZF_DEFAULT_OPTS} -m --header='[kill:process]'" | awk '{print $2}')
  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
    kp
  fi
}

if [[ -z "$TMUX" ]] && [ "$SSH_CONNECTION" != "" ]; then
  tmux attach-session -t dotfiles || tmux new-session -s dotfiles
fi;

# hello linux
start_vpn(){
  sudo openvpn --config  $HOME/.vpn/$1.ovpn --auth-user-pass  $HOME/.vpn/$1.ldap
}

# use pylsp instead. todo remove
function run_ctags(){
  ctags -R --languages=ruby --exclude=.git --exclude=log .
}

create-dataset(){
  aws s3 cp $1 "$DATASET_BUCKET/$2/$1"
}

function ping-test(){
  ping -c 5 8.8.8.8
}

# bun completions
[ -s "/Users/apetrov/.bun/_bun" ] && source "/Users/apetrov/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
