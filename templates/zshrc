#login shell
# /usr/local/Cellar/zsh/5.0.2/bin/zsh-5.0.2 -i
# don't use anything below this version!
platform='unknown'
unamestr=`uname`
if [[ "$unamestr" == 'Linux' ]]; then
   platform='linux'
elif [[ "$unamestr" == 'Darwin' ]]; then
   platform='osx'
fi

#zshell
ZSH=$HOME/.oh-my-zsh
ZSH_THEME="robbyrussell"
#plugins=(bundler rake rake-fast cp gem lein git vi-mode sudo ruby brew)
source $ZSH/oh-my-zsh.sh

export PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/git/bin:$PATH
export SBT_OPTS="-Xmx2048M -XX:MaxPermSize=256M" #Scala build too
export EDITOR='vim'

bindkey -v # VIM binding for zsh

#SSH certificates
ssh-add ~/.ssh/id_rsa >/dev/null  2>&1
ssh-add ~/.ssh/apetrov_virool_rsa >/dev/null  2>&1

#RVM
PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

#Redefine standard tools on osx
if [[ $platform == 'osx' ]]; then
  PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
  MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
  alias ctags="`brew --prefix`/bin/ctags"
  # https://gist.github.com/quickshiftin/9130153
  alias man='_() { echo $1; man -M $(brew --prefix)/opt/coreutils/libexec/gnuman $1 1>/dev/null 2>&1;  if [ "$?" -eq 0 ]; then man -M $(brew --prefix)/opt/coreutils/libexec/gnuman $1; else man $1; fi }; _'
fi

function remote-db(){
  rm -f config/database.yml;
  ln -s $(pwd)/config/database.remote.yml config/database.yml;
  echo "in remote mode";
}

function local-db(){
  rm -f config/database.yml;
  ln -s $(pwd)/config/database.local.yml config/database.yml;
  echo "in local mode"
}

function share(){
  curl --upload-file ./$1 https://transfer.sh/$1 | pbcopy;
  echo `pbpaste`;
}

# Convinience tools
alias hh='pbpaste | html2haml | pbcopy'
alias ss='python -m SimpleHTTPServer'
alias -g jsonformat='python -m json.tool'
alias -g xmlformat="xmllint -format"
alias -g be='bundle exec'
alias -s log="tail -f"
alias virool-deploy="bundle exec rake assets:precompile && be cap deploy:assets:update_manifest && be cap deploy"
alias spotlight-stop="sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist"
alias spotlight-start="sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist"
alias up='git pull'
alias pull='git pull'
alias -g push='git push'
alias -g commit='git commit -m'
alias deploy='bundle exec cap production deploy'
alias schema-load= "RAILS_ENV=test be rake db:schema:load db:schema:load_additional"
alias -g gistme = 'gist -p --copy '

function vpn(){
  osascript -e 'tell application "Viscosity" to connectall'
}

function novpn(){
  osascript -e 'tell application "Viscosity" to disconnectall'
}


function psql2 {
  psql -U `cat ~/.pgpass | grep $1 | cut -d: -f4` -h `cat ~/.pgpass | grep $1 | cut -d: -f1` $2
}
__rvm_project_rvmrc  #https://rvm.io/integration/zsh/

function prune(){
  git branch --merged | grep -v "\*" | xargs -n 1 git branch -d
  git fetch -p
  git gc
}

function whiteboard(){
  convert $1 -morphology Convolve DoG:15,100,0 -negate -normalize -blur 0x1 -channel RBG -level 60%,91%,0.1 $2
}

# promt patch
# http://superuser.com/questions/151803/how-do-i-customize-zshs-vim-mode
function zle-line-init zle-keymap-select {
    RPS1="${${KEYMAP/vicmd/-- NORMAL --}/(main|viins)/-- INSERT --}"
    RPS2=$RPS1
    zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select


function psql3(){
  psql -U `cat ~/.pgpass | grep $PSQL_SERVER | cut -d: -f4` -h `cat ~/.pgpass | grep $PSQL_SERVER | cut -d: -f1` $PSQL_DB
}

function connect(){
  export PSQL_SERVER=$1
  export PSQL_DB=$2
}

function pcsv(){
  echo "copy($1) to STDOUT with csv;" | psql3
}

function phcsv(){
  echo "copy($1) to STDOUT with csv header;" | psql3
}

function campaigns-with-segments(){
  psql -U postgres -h db01.virool -c "select id from campaigns where segments_predicate is not null and state = 'running'" virool_production
}

function to(){
  ssh virool@$1.virool
}

function vpn-dns(){
  cat ~/projects/virool-chef/data_bags/zones/virool.json | jq  '.zone_info.records[] | {name: .name, ip: .ip } | .ip + " " + .name + ".virool"' | sed s/\"//g
}

function update-vpn-dns(){
  cat /etc/hosts | grep -v virool | sudo tee /etc/hosts
  vpn-dns | sudo tee -a /etc/hosts
}

function jira(){
  open https://viroolteam.atlassian.net/browse/SSP-111/$1
}

function origin(){
  echo "https://github.com/`git config --get remote.origin.url | cut -f2 -d':' | sed s/.git$//`"
}

tmuxify () {
  while read p; do
    echo $p | tmux load-buffer -
    tmux paste-buffer -t right
    tmux delete-buffer
    echo $p
    sleep 5
  done < $1
}


. ~/.z.sh
